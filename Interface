#chat GUI interface

#Import the library (This whole thing works on tkinker)
from tkinter import *
name = ""

#function to apply name
def applyname(nameWindow, name, popup):
    name = str(nameWindow.get)
    return name
    popup.destroy
    chat(name)

    #Popup to take the users name.
def namepopup():
    popup = Tk()
    popup.wm_title("Please enter your name")
    popup.geometry("385x100")
    label = Label(popup, text="Please enter a name", font='Arial')
    label.pack(side="top", fill="x", pady=10)
    nameWindow = Text(bd=0, bg="black",width="80", height="50", font=("Arial", 12), foreground="#00ffff")
    nameWindow.place(x=50, y=130, height=50, width=260)
    name = "USER"
    status = False

    select = Button(popup, text="Okay", command = applyname(nameWindow, name, popup))
    select.pack()
    #if status == True:
       # name = str(nameWindow.get)
        #return name
        #popup.destroy()
namepopup()

class program():
    
    #savelog programming
    def savelog():
        savefile = open("logged conversation.txt", "a")
        from datetime import datetime
        timestamp = datetime.now()
        timestamp = timestamp.strftime("%Y-%m-%d %H:%M:%S")
        contents = timestamp + "\nAll text goes here. Replace with actual contents in later build.\n\n"
        savefile.write(contents)
        savefile.close()

    def sendmsg(chatWindow, messageWindow, userin, name):
        messagecon = name + ":\t" + userin + "\n"
        chatWindow.insert ('1.0', messagecon)
        messageWindow.delete
        return chatWindow, userin

    #Generating the actual window
    root = Tk()
    root.title("Chat Bot") #the title on the window
    root.geometry("400x500") #size upon boot, can be resized if the below commands are set to true
    root.resizable(width=FALSE, height=FALSE)
    main_menu = Menu(root) #menu bar, could be removed but gives the save and close options (close is covered by the quit button

    # Create the submenu 
    file_menu = Menu(root)

    # Add commands to submenu
    file_menu.add_command(label="New..")#, command=root)
    file_menu.add_command(label="Save As..", command=savelog())
    file_menu.add_command(label="Exit", command=root.destroy)
    main_menu.add_cascade(label="File", menu=file_menu)
    #Add the rest of the menu options to the main menu, have been removed but may be useful for archive if needed.
    #main_menu.add_command(label="Edit")
    #main_menu.add_command(label="Quit")
    root.config(menu=main_menu)

    #This is the chat menu where text will show up
    chatWindow = Text(root, bd=1, bg="black",  width="50", height="8", font=("Arial", 23), foreground="#00ffff")
    chatWindow.pack
    chatWindow.place(x=6,y=6, height=385, width=370) #placement of chat window

    #This is where the user inputs the message itself,
    messageWindow = Text(root, bd=0, bg="black",width="30", height="4", font=("Arial", 23), foreground="#00ffff")
    messageWindow.place(x=128, y=400, height=88, width=260)
    userin = str(messageWindow.get)

    #gives a scrollbar for the window
    scrollbar = Scrollbar(root, command=chatWindow.yview, cursor="star")
    scrollbar.place(x=375,y=5, height=385)

    #Button to send the text
    Button= Button(root, text="Send", width="12", height=5, command = sendmsg(chatWindow, messageWindow, userin, name), bd=0, bg="#0080ff", activebackground="#00bfff",foreground='#ffffff',font=("Arial", 12))
    messageWindow.delete
    Button.place(x=6, y=400, height=88)
    root.mainloop()

program()

# sendmsg(chatWindow, userin, name)
